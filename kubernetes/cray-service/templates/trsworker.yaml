{{- if gt (len .Values.trsWorkers) 0 -}}
{{- $fullname := include "cray-service.fullname" . -}} 
{{- range .Values.trsWorkers }}
---
apiVersion: trs.hms.cray.com/v1alpha1
kind: TRSWorker
metadata:
  name: "{{ $fullname }}-{{ .workerType }}-{{ .workerVersion }}"
spec:
  worker_type: {{ .workerType | quote }}
  worker_version: {{ .workerVersion | quote }}
  worker_image_tag: {{ .workerImageTag | quote }}
{{- end }}

---
# The deployment using this TRSWorker really needs to wait for the topics to actually have been created before
# starting up. This is because in case the Kafka server is configured to allow topics to be created as they are used
# this would cause a conflict in the operator which would be bad.
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "cray-service.fullname" . }}-wait-for-kafka-topics-{{ .Release.Revision }}"
  labels:
    app.kubernetes.io/name: {{ include "cray-service.fullname" . }}-wait-for-kafka-topics
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      # This service account is created in the TRS operator deployment.
      serviceAccountName: "kafka-topics-watcher"
      containers:
{{- range .Values.trsWorkers }}
{{- $trsWorkerName := print $fullname "-" .workerType "-" .workerVersion }}
        - name: "wait-for-kafka-topics-{{ .workerType }}-{{ .workerVersion }}"
          image: {{ $.Values.kubectl.image.repository }}:{{ $.Values.kubectl.image.tag }}
          imagePullPolicy: {{ $.Values.kubectl.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - while [ "`kubectl -n services get kafkatopics.kafka.strimzi.io trs-{{ $trsWorkerName }}-{{ .workerType }}-{{ .workerVersion }}-rcv -o jsonpath='{.status.conditions[0].type}'`" != "Ready" ]; do
              echo "Waiting for trs-{{ $trsWorkerName }}-{{ .workerType }}-{{ .workerVersion }}-rcv to be Ready";
              sleep 3;
              done;
              while [ "`kubectl -n services get kafkatopics.kafka.strimzi.io trs-{{ $trsWorkerName }}-{{ .workerType }}-{{ .workerVersion }}-send -o jsonpath='{.status.conditions[0].type}'`" != "Ready" ]; do
              echo "Waiting for trs-{{ $trsWorkerName }}-{{ .workerType }}-{{ .workerVersion }}-send to be Ready";
              sleep 3;
              done;
              echo "Kafka topics reported ready.";
{{- end }}
{{- end }}
