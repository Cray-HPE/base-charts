#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
suite: deployment pvcs test
templates:
  - pvcs.yaml
tests:
  - it: should render 1 pvc
    set:
      persistentVolumeClaims:
        one:
          name: one
    asserts:
      - template: pvcs.yaml
        hasDocuments:
          count: 1
      - template: pvcs.yaml
        isNull:
          path: spec.storageClassName
  - it: should render the correct default access mode
    set:
      persistentVolumeClaims:
        one:
          name: one
    asserts:
      - template: pvcs.yaml
        equal:
          path: spec.accessModes[0]
          value: ReadWriteOnce
  - it: should render the correct default storage size
    set:
      persistentVolumeClaims:
        one:
          name: one
    asserts:
      - template: pvcs.yaml
        equal:
          path: spec.resources.requests.storage
          value: 1Gi
  - it: should render 3 pvcs
    set:
      persistentVolumeClaims:
        one:
          name: one
        two:
          name: two
        three:
          name: three
    asserts:
      - template: pvcs.yaml
        hasDocuments:
          count: 3
  - it: should render pvcs with explicit storage class
    set:
      storageClass: smf
      persistentVolumeClaims:
        one:
          name: one
        two:
          name: two
    asserts:
      - template: pvcs.yaml
        hasDocuments:
          count: 2
      - template: pvcs.yaml
        equal:
          path: spec.storageClassName
          value: smf
  - it: should render pvcs with different storage classes
    set:
      storageClass: smf
      persistentVolumeClaims:
        one:
          name: one
        two:
          storageClass: ceph-cephfs-external
          name: two
    asserts:
      - template: pvcs.yaml
        hasDocuments:
          count: 2
      - template: pvcs.yaml
        equal:
          path: spec.storageClassName
          value: smf
        documentIndex: 0
      - template: pvcs.yaml
        equal:
          path: spec.storageClassName
          value: ceph-cephfs-external
        documentIndex: 1
