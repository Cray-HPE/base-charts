#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
suite: deployment test customisable update strategy
templates:
  - deployment.yaml
tests:
  - it: should set update strategy to Recreate
    set:
      strategy:
        type: Recreate
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.strategy.type
          value: Recreate
      - template: deployment.yaml
        isNull:
          path: spec.strategy.rollingUpdate
  # TODO: fixme
  # - it: should set update strategy to Recreate (user provides null rollingUpdate)
  #   set:
  #     strategy:
  #       type: Recreate
  #       rollingUpdate: null
  #   asserts:
  #     - template: deployment.yaml
  #       equal:
  #         path: spec.strategy.type
  #         value: Recreate
  #     - template: deployment.yaml
  #       isNull:
  #         path: spec.strategy.rollingUpdate
  - it: should set maxSurge
    set:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 50%
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.strategy.type
          value: RollingUpdate
      - template: deployment.yaml
        equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 50%
      - template: deployment.yaml
        isNotNull:
          path: spec.strategy.rollingUpdate
  - it: should set maxUnavailable
    set:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 50%
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.strategy.type
          value: RollingUpdate
      - template: deployment.yaml
        equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 50%
      - template: deployment.yaml
        isNotNull:
          path: spec.strategy.rollingUpdate
  - it: should set maxSurge and maxUnavailable
    set:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 30%
          maxUnavailable: 50%
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.strategy.type
          value: RollingUpdate
      - template: deployment.yaml
        equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 30%
      - template: deployment.yaml
        equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 50%
      - template: deployment.yaml
        isNotNull:
          path: spec.strategy.rollingUpdate
