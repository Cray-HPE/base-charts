#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
suite: deployment test for sql enabled
templates:
  - kafka.yaml
  - deployment.yaml
tests:
  - it: should render 1 kafka cluster w/ 2 destination rules
    set:
      kafkaCluster.enabled: true
    asserts:
      - template: kafka.yaml
        hasDocuments:
          count: 3
  - it: should render destination rules with the appropriate values
    set:
      kafkaCluster.enabled: true
      chart.name: "test-chart"
    asserts:
      - template: kafka.yaml
        documentIndex: 1
        equal:
          path: spec.host
          value: RELEASE-NAME-cray-service-kafka-bootstrap
      - template: kafka.yaml
        documentIndex: 2
        equal:
          path: spec.host
          value: RELEASE-NAME-cray-service-kafka-brokers
  - it: should render kafka cluster with the appropriate default values
    set:
      kafkaCluster.enabled: true
    asserts:
      - template: kafka.yaml
        documentIndex: 0
        equal:
          path: spec.kafka.config
          value:
            offsets.topic.replication.factor: 3
            transaction.state.log.min.isr: 2
            transaction.state.log.replication.factor: 3
      - template: kafka.yaml
        documentIndex: 0
        equal:
          path: spec.kafka.replicas
          value: 3

  - it: should include secrets mount for Kafka cluster CA certificate
    set:
      kafkaCluster:
        enabled: true
      containers:
        test-container:
          name: test-service
          image:
            repository: test-service
          volumeMounts:
            - name: test-mount
              mountPath: /my-path
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: cray-service-cluster-ca-cert
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /secrets/kafka/cluster
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: test-mount
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /my-path

  - it: should include an init container that waits for the readiness watcher job
    set:
      kafkaCluster.enabled: true
      chart.name: "test-chart"
      busybox.image.repository: "busybox"
      busybox.image.tag: "1.28.0-glibc"
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.initContainers[0].name
          value: wait-for-kafka
      - template: deployment.yaml
        equal:
          path: spec.template.spec.initContainers[0].image
          value: "busybox:1.28.0-glibc"
