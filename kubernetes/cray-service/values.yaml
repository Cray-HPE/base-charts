---
# Default values for cray-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# MIT License
# (C) Copyright [2020-2021] Hewlett Packard Enterprise Development LP
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

busybox:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker.io/library/busybox
    tag: 1.28.0-glibc
    pullPolicy: IfNotPresent

kubectl:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker-kubectl
    tag: 1.19.15
    pullPolicy: IfNotPresent

imagePullSecrets: []
storageClass: ""  # intended to be set/overriden at install time, or not set at all to use the default

# TODO: finish full support for StatefulSet and DaemonSet
type: Deployment  # Deployment|StatefulSet|DaemonSet
nameOverride: ""  # the name of your service
fullnameOverride: ""  # use this if you want to provide a more-complete name for certain labels/naming (very optional)
replicaCount: 1
partitionId: ""
#
# Use the following setting to add pod priority to your Deployment|StatefulSet|DaemonSet
#
# priorityClassName: csm-high-priority-service
# custom pod hostname
hostname: ""
# the below are labels/annotations to generically apply to metadata on resources.
# There are also others available in individual resources below for applying
# uniquely there
#
# Note that this base chart already applies standard labels and annotations by
# default, you only need to worry about adding your own if you have specific
# needs for labeling or annotating
labels: {}
annotations: {}
# pod annotations only apply to spec.template.metadata.annotations within a deployment, statefulset, daemonset, etc.
podAnnotations: {}
# standard Kubernetes nodeSelector, tolerations, and affinity objects for spec
nodeSelector: {}
tolerations: []
affinity: {}
serviceAccountName: ""  # if set, not empty, will set the service account to use for the deployment/statefulset, daemonset, etc.

nobodyUserId: 65534  # The nobody user ID on our systems.
nobodyGroupId: 65534  # The nobody group ID on our systems.

# Deployment Upgrade Strategy
# Only relevant if type: Deployment is set
# This is the standard K8S DeploymentStrategy object
# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#deploymentstrategy-v1-apps
strategy: {}

# standard k8s initContainers
# standard k8s container properties supported: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#container-v1-core
initContainers: {}
# my-service-init-container: # arbitrary key name
#   name: ""
#   image:
#     repository: "" # e.g. cray/my-service
#     tag: latest
#     pullPolicy: IfNotPresent
#   ...
#   other standard k8s container/init container properties supported: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#container-v1-core

containers: {}
# your-container-name: # arbitrary key name
#   name: "" # e.g. my-service
#   image:
#     repository: "" # e.g. cray/my-service
#     tag: latest
#     pullPolicy: IfNotPresent
#   securityContext:
#     runAsUser: 65534
#     runAsGroup: 65534
#     runAsNonRoot: true
#   env: []
#   ports:
#     - name: http
#       containerPort: 8080
#       protocol: TCP
#   livenessProbe:
#     httpGet:
#       path: /
#       port: 8080
#     initialDelaySeconds: 5
#     periodSeconds: 3
#   readinessProbe:
#     httpGet:
#       path: /
#       port: 8080
#     initialDelaySeconds: 5
#     periodSeconds: 3
#   startupProbe:
#     httpGet:
#       path: /
#       port: 8080
#     failureThreshold: 5
#     periodSeconds: 3
#   ... other standard k8s container properties supported: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#container-v1-core

# standard Kubernetes volumes definitions per object
volumes: {}
# volume:  # arbitrary key name
#   name: my-dir
#   emptyDir: {}

# standard Kubernetes securityContext
# This can be useful if you want to control the UID/GID under which your container runs
# or manage permissions for mounted volumes
# See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#podsecuritycontext-v1-core
# securityContext:
#   runAsUser: 1000
#   runAsGroup: 2000
#   fsGroup: 2000

service:
  enabled: true
  type: ClusterIP
  network: node-management  # node-management|hardware-management|high-speed|customer-access
  sharedIp: false
  # Sets external IP, requires type: LoadBalancer type
  # loadBalancerIP: ""
  # standard Kubernetes service port definitions
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: http
  labels: {}
  annotations: {}

etcdCluster:
  enabled: false
  image:
    repository: artifactory.algol60.net/csm-docker/stable/quay.io/coreos/etcd
    tag: v3.3.22
    pullPolicy: IfNotPresent
  # compactionMode options: ‘periodic’, ‘revision’.
  compactionMode: periodic
  # ‘periodic’ for duration based retention, defaulting to hours if no time unit is provided (e.g. ‘5m’).
  # ‘revision’ for revision number based retention.
  compactionRetention: 1  # Auto compaction retention. 0 means disable auto compaction.
  # if compactionMode == periodic, then compactionRetention is the time on which compaction should trigger. default (1 hour)
  # if compactionMode == revision, then compactionRetention is the number of revisions at when compaction will get trigger.

  snapshotMax: 5  # Maximum number of snapshot files to retain (0 is unlimited)
  snapshotCount: 10000  # Down from default of 100000 -- easier on memory
  heartbeatInterval: 4200  # Time (in milliseconds) of a heartbeat interval.
  electionTimeout: 21000  # Time (in milliseconds) for an election to timeout
  enforceAntiAffinity: true  # NOTE: If affinity is specified, this is ignored (to support backward compatibility)
  maxQuota: false  # Default quota is 2GB -- setting to true sets quota to max (10GB)
  size: 3
  labels: {}
  annotations: {}
  nodeSelector: {}
  affinity: {}
  #
  # Consumers of this chart can override etcd cluster pod resource limits as follows:
  #
  # resources:
  #   limits:
  #     cpu: "2"
  #     memory: 2Gi
  #   requests:
  #     cpu: 10m
  #     memory: 64Mi
  resources: {}
  pvc:
    enabled: true
    accessMode: "ReadWriteOnce"
    storage: 3Gi  # A bit of headroom above 2GB quota default
  tls:
    enabled: false
    issuer: cert-manager-issuer-common
  #
  # Consumers of this chart can set pod priority for etcd pods as follows:
  #
  # podPriorityClassName: csm-high-priority-service

# A list of sealedSecrets passed in to be deployed.
sealedSecrets: []
# Whether or not to mount secrets as volumeMounts to containers
mountSealedSecrets: true

# TODO, further work on official ingress via istio and otherwise for different scenarios
ingress:
  enabled: false
  ui: false  # TODO: we're not actually doing anything with this yet, but should be applicable for istio auth decisions
  # ingress.gateway
  # This should never really be changed unless you know what you're doing.
  gateways:
    - "services-gateway"
    - "customer-admin-gateway"
  # ingress.prefix
  # This is the route to your service through the gateway from the outside. It defaults to /apis/{service name minus any `cray-`}
  # Example: `cray-ims` would default to `/apis/ims` if prefix == ""
  prefix: ""
  # ingress.regex
  # If set, AND the prefix value isn't set, then will use a regex to match incoming traffic to the gateway to this
  # route. Allows for the possibility of capturing more than the prefix value does for routing to your underlying
  # service
  regex: ""
  # ingress.uri
  # This is the route your container is expecting as a base path (where kong routes to). It defaults to /api
  # A call from the ingress to {ingress.prefix}/foo/bar would route to your container as {ingress.uri}/foo/bar
  # Example: Assume ingress.prefix == /apis/ims, ingress.uri == /api, GET kong:30443/apis/ims/v1/foo -> ims_container/api/v1/foo
  uri: ""
  labels: {}
  annotations: {}


sqlCluster:
  enabled: false
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker.io/library/postgres
    tag: 13.2-alpine
    pullPolicy: IfNotPresent
  postgresVersion: "11"
  waitForItJob: true
  instanceCount: 3
  volumeSize: 1Gi
  #
  # Consumers of this chart can set pod priority for postgres pods as follows:
  #
  # podPriorityClassName: csm-high-priority-service
  users:
    service_account: []
  databases:
    service_db: service_account
  tls:
    enabled: false
    issuer: cert-manager-issuer-common
  connectionPooler:
    enabled: false
    instanceCount: 3
    mode: "session"
    image: artifactory.algol60.net/csm-docker/stable/registry.opensource.zalan.do/acid/pgbouncer:master-17
  #
  # Consumers of this chart can override postgres cluster pod resource limits as follows:
  #
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: 500Mi
  #   requests:
  #     cpu: 100m
  #     memory: 100Mi
  resources: {}
  #
  # Consumers of this chart can override postgres parameters as follows:
  #
  # parameters:
  #   shared_buffers: "32MB"
  #   max_connections: "10"
  #   log_statement: "all"
  parameters: {}

  backup:
    enabled: false
    image:
      repository: artifactory.algol60.net/csm-docker/stable/cray-postgres-db-backup
      tag: 0.2.0
      pullPolicy: IfNotPresent

    storageBucket: postgres-backup
    storageSecret: postgres-backup-s3-credentials

    schedule: "1 1 * * *"  # Once per day at 1:01AM

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    resources:
      limits:
        cpu: 1000m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 200Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}


trsWorker:
  enabled: false
  workerType: "http"
  workerVersion: "v1"

kafkaCluster:
  enabled: false
  ### For examples of what can go in the following sections
  # please see examples in: https://github.com/strimzi/strimzi-kafka-operator/tree/master/examples/kafka
  clusterSettings:
    version: 2.2.1
    replicas: 3
    listeners:
      plain: {}
      tls: {}
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 1Gi
        deleteClaim: false
  zookeeperSettings:
    replicas: 3
    storage:
      type: persistent-claim
      size: 1Gi
      deleteClaim: false

persistentVolumeClaims: {}
# persistent-volume: # arbitrary key name
#   name: persistent-volume
#   accessModes:
#     - ReadWriteOnce
#   storageClass: smf # Optional per-volume storage class, used in preference to global storageClass if both are present
#   resources: {}

volumeClaimTemplate:
  name: ""
  resources:
    requests:
      storage: 1Gi
  storageClassName:
  accessModes: ["ReadWriteOnce"]

global:
  appVersion: ""  # This is set at build time.
  # these are values to address shortcomings of helm in referencing .Chart.* values in sub-charts/parent charts:
  # https://github.com/helm/helm/issues/4314
  # https://github.com/helm/helm/issues/3920
  chart:
    name: ""  # set at deploy time automatically, no need to ever set explicitly
    version: ""  # set at deploy time automatically, no need to ever set explicitly
