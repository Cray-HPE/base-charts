{{/*
MIT License

(C) Copyright 2023 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}
# With the Chesire Cat release of CSM, postgres backup are done using the upstream postgres operator
# logical backups. Any updates to Chesire Cat will require that the old postgres backup cronjob (based
# off the image https://github.com/Cray-HPE/postgres-db-backup) be removed. The postgres operator
# will create new logical-backup cronjobs for those services that have enabled logical backups.
# This job to cleanup the old cronjob can be removed after the Chesire Cat release.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "cray-postgresql.fullname" . }}-jobs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "cray-postgresql.fullname" . }}-jobs-role
rules:
- apiGroups: ["batch"]
  resources: ["cronjobs"]
  verbs: ["delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "cray-postgresql.fullname" . }}-jobs-role-binding
subjects:
- kind: ServiceAccount
  name: {{ template "cray-postgresql.fullname" . }}-jobs
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "cray-postgresql.fullname" . }}-jobs-role
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-postgresql.fullname" . }}-cleanup-old-cronjob
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ template "cray-postgresql.fullname" . }}-cleanup-old-cronjob
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "cray-postgresql.fullname" . }}-jobs
      restartPolicy: Never
      containers:
        - name: cleanup-old-cronjob
          image: {{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          command:
            - '/bin/sh'
          args:
            - "-c"
            - |
               echo "Remove old cronjob $BACKUP_CRONJOB_NAME if it exists..."
               if kubectl -n services get cronjob $BACKUP_CRONJOB_NAME >/dev/null 2>&1; then
                 echo "Found cronjob $BACKUP_CRONJOB_NAME"
                 kubectl -n services delete cronjob $BACKUP_CRONJOB_NAME
                 echo "Done!"
               else
                 echo "Nothing to remove because cronjob $BACKUP_CRONJOB_NAME does not exist."
               fi
          env:
          - name: BACKUP_CRONJOB_NAME
            value: {{ template "cray-postgresql.fullname" . }}-postgresql-db-backup